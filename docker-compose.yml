version: '3'
services:
  webserver:
    build:
      context: ./
      dockerfile: ./docker/webserver/Dockerfile
    restart: always
    ports:
      - 80:80
    depends_on:
      backend:
        condition: service_started
      frontend:
        condition: service_started

  db:
    build:
      context: ./
      dockerfile: ./docker/db/Dockerfile
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/db
    volumes:
      - db:/data/db
    expose:
      - 5432
    ports:
      - '5432:5432'
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 5s
      retries: 5

  cache:
    build:
      context: ./
      dockerfile: ./docker/cache/Dockerfile
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --loglevel warning
    volumes:
      - cache:/data
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./
      dockerfile: ./docker/backend/Dockerfile
    restart: always
    environment:
      NODE_ENV: production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      REDIS_HOST: cache
      SESSION_SECRETS: ${SESSION_SECRETS}
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
    ports:
      - '4000:4000'
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    volumes:
      - ./backend:/srv/backend
      - backend_node_modules:/srv/backend/node_modules

  frontend:
    build:
      context: ./
      dockerfile: ./docker/frontend/Dockerfile
    restart: always
    environment:
      NODE_ENV: production
      API_PATH: http://backend:4000
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/srv/frontend
      - frontend_node_modules:/srv/frontend/node_modules

  mailhog:
    image: mailhog/mailhog
    restart: always
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui

volumes:
  db:
  cache:
  backend_node_modules:
  frontend_node_modules:
